name: Amass - Enumeration

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target domain to scan'
        required: true
        default: 'example.com'

jobs:
  amass-enum:
    runs-on: ubuntu-latest
    container:
      image: golang:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Amass if not present
        run: |
          # Check if Amass is already in the ./bin folder. If not, install it.
          if [ ! -f "./bin/amass" ]; then
            echo "Amass not found in ./bin. Installing..."
            mkdir -p ./bin
            go install -v github.com/owasp-amass/amass/v4/...@master
            cp "$(go env GOPATH)/bin/amass" ./bin/amass
          else
            echo "Amass is already installed."
          fi
        shell: bash

      - name: Prepare domains file
        run: |
          # Create a domains file from the input "target"
          echo "${{ github.event.inputs.target }}" > domains.txt
        shell: bash

      - name: Run Amass Enumeration
        run: |
          # Run amass enumeration using the domains file
          ./bin/amass enum -src -ip -brute -min-for-recursive 2 -dir ./ -df domains.txt -o "${PWD}/amass.log" -log "${PWD}/amass-errors.log"
        shell: bash

      - name: Upload Amass Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: amass-logs
          path: |
            amass.log
            amass-errors.log
          retention-days: 1
